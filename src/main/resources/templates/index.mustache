{{<layout.mustache}}
  {{$title}}Dummy{{/title}}
  {{$body}}
    <div class="jumbotron">
      <h1>
        <img src="{{ctx.base}}/images/logo.png"/>
        <a href="https://github.com/dacr/finatra-dummy">Finatra dummy</a>
      </h1>

    <p align="right">
      release <b><span id="version">{{version}}</span></b>({{buildate}})
    </p>
    
    
    <ul class="nav nav-pills">
      <li class="active"><a data-toggle="tab" href="#infos">Request Infos</a></li>
      <li><a data-toggle="tab" href="#fileupload">File upload</a></li>
      <li><a data-toggle="tab" href="#chartwithmyseries">Time series Chart</a></li>
    </ul>
    
    <div class="tab-content">
    
      <!-- ------------------------------------------------------------------------------------------- -->
      <div id="infos" class="tab-pane fade in active">
        <p><a href="{{ctx.base}}">home sweet home</a> <i>(ctx.base = "{{ctx.base}}")</i></p>
        <ul class="list-group">
          <li class="list-group-item">path               : {{info.path}}</li>
          <li class="list-group-item">uri                : {{info.uri}}</li> 
          <li class="list-group-item">location           : {{info.location}}</li>
          <li class="list-group-item">referer            : <a href="{{info.referer}}">{{info.referer}}</a></li>
          <li class="list-group-item">userAgent          : {{info.userAgent}}</li>
          <li class="list-group-item">host               : {{info.host}}</li>
          <li class="list-group-item">pathUrl            : {{info.pathUrl}}</li>
          <li class="list-group-item">remoteHost         : {{info.remoteHost}}</li>
          <li class="list-group-item">remoteAddr         : {{info.remoteAddress}}</li>
          <li class="list-group-item">remotePort         : {{info.remotePort}}</li>
          <li class="list-group-item">xForwardedFor      : {{info.xForwardedFor}}</li>
          <li class="list-group-item">expires            : {{info.expires}}</li>
        </ul>
      </div>
      <!-- ------------------------------------------------------------------------------------------- -->
      <div id="fileupload" class="tab-pane fade">
        <script src="{{ctx.base}}/js/libs/dropzone.js"></script>
        <script>
          Dropzone.options.customDropzone = {
            paramName: "thefile", // The name that will be used to transfer the file
            maxFilesize: 500 // MB
          }
          //Dropzone.options.customDropzone = false;
          Dropzone.autoDiscover = true;
        </script>
    
        <form action="{{ctx.base}}/file-upload"
              class="dropzone"
              id="custom-dropzone"
              style="background-color:grey;foreground:blue"
              >          
        </form>
      </div>
      <!-- ------------------------------------------------------------------------------------------- -->      
      <div id="chartwithmyseries" class="tab-pane fade">
        <script src="{{ctx.base}}/js/libs/highcharts/highcharts.js"></script>
        <div id="mychart" style="min-width: 600px; height: 400px; margin: 0 auto"></div>
        <script>
          //var ctx = document.getElementById("myChart")

          var chart = Highcharts.chart('mychart', {
              chart: {
                  type: 'spline'
              },
              title: {
                  text: 'Snow depth at Vikjafjellet, Norway'
              },
              subtitle: {
                  text: 'Irregular time data in Highcharts JS'
              },
              xAxis: {
                  type: 'datetime',
                  dateTimeLabelFormats: { // don't display the dummy year
                      month: '%e. %b',
                      year: '%b'
                  },
                  title: {
                      text: 'Date'
                  }
              },
              yAxis: {
                  title: {
                      text: 'Snow depth (m)'
                  },
                  min: 0
              },
              tooltip: {
                  headerFormat: '<b>{series.name}</b><br>',
                  pointFormat: '{point.x:%e. %b}: {point.y:.2f} m'
              },
      
              plotOptions: {
                  spline: {
                      marker: {
                          enabled: true
                      }
                  }
              }      
          });

          
          var xhr = new XMLHttpRequest();
          xhr.onreadystatechange =  () => {
            if (xhr.readyState === XMLHttpRequest.DONE) {
              const resp = xhr.responseText
              console.log(resp)
              console.log(chart)
              chart.addSeries(resp)
              $(this).attr('disabled', true);
            }
          }
          xhr.open('GET', '{{ctx.base}}/myseries')
          xhr.send(null)
          
        </script>
        
      </div>
      <!-- ------------------------------------------------------------------------------------------- -->
      
    </div>

    
  {{/body}}
{{/layout.mustache}}
